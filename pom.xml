<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.axoniq.demo.university</groupId>
  <artifactId>university-demo-kotlin</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <properties>
    <!-- region [maven-project] -->
    <project.encoding>UTF-8</project.encoding>
    <project.build.sourceEncoding>${project.encoding}</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${project.encoding}</project.reporting.outputEncoding>

    <kotlin.version>2.2.20</kotlin.version>
    <kotlin.compiler.apiVersion>2.2</kotlin.compiler.apiVersion>
    <kotlin.compiler.languageVersion>2.2</kotlin.compiler.languageVersion>

    <java.version>21</java.version>
    <jdk.version>21</jdk.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <!-- endregion [maven-project] -->

    <!-- region [maven-plugins] -->
    <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
    <!-- endregion [maven-plugins] -->

    <!-- region [dependencies-main] -->
    <spring-boot.version>3.5.6</spring-boot.version>
    <axon.version>5.0.0-M3</axon.version>
    <log4j.version>2.24.3</log4j.version>
    <!-- endregion [dependencies-main] -->

    <!-- region [dependencies-test] -->
    <assertj.version>3.27.4</assertj.version>
    <awaitility.version>4.3.0</awaitility.version>
    <hamcrest.version>3.0</hamcrest.version>
    <junit.version>5.12.1</junit.version>
    <mockito-kotlin.version>6.0.0</mockito-kotlin.version>
    <!-- endregion [dependencies-test] -->
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-bom</artifactId>
        <version>${kotlin.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- region [Kotlin] -->
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.github.oshai</groupId>
      <artifactId>kotlin-logging-jvm</artifactId>
      <version>7.0.13</version>
      <scope>compile</scope>
    </dependency>
    <!-- endregion [Kotlin] -->

    <!-- region [Spring Boot] -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <!-- endregion [Spring Boot] -->

    <!-- region [Axon Framework] -->
    <dependency>
      <groupId>org.axonframework</groupId>
      <artifactId>axon-messaging</artifactId>
      <version>${axon.version}</version>
    </dependency>
    <dependency>
      <groupId>org.axonframework</groupId>
      <artifactId>axon-modelling</artifactId>
      <version>${axon.version}</version>
    </dependency>
    <dependency>
      <groupId>org.axonframework</groupId>
      <artifactId>axon-eventsourcing</artifactId>
      <version>${axon.version}</version>
    </dependency>
    <!-- endregion [Axon Framework] -->

    <!-- Event Store Dependencies -->

<!--    <dependency>-->
<!--      <groupId>org.axonframework</groupId>-->
<!--      <artifactId>axon-server-connector</artifactId>-->
<!--      <version>${axon.version}</version>-->
<!--    </dependency>-->

    <!-- Log4j Dependencies -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>

    <!-- Test Dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.axonframework</groupId>
      <artifactId>axon-test</artifactId>
      <version>${axon.version}</version>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>${awaitility.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>clean package</defaultGoal>
    <sourceDirectory>src/main/kotlin</sourceDirectory>
    <testSourceDirectory>src/test/kotlin</testSourceDirectory>

    <plugins>
      <plugin>
        <!-- KAPT is optional and has to be configured in modules using it -->
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>

        <configuration>
          <jvmTarget>${java.version}</jvmTarget>
          <apiVersion>${kotlin.compiler.apiVersion}</apiVersion>
          <languageVersion>${kotlin.compiler.languageVersion}</languageVersion>

          <!-- Compiler plugins need to be configured on this level for IntelliJ to recognize them -->
          <compilerPlugins>
            <plugin>spring</plugin>
            <plugin>jpa</plugin>
            <plugin>no-arg</plugin>
            <plugin>all-open</plugin>
          </compilerPlugins>
          <pluginOptions>
            <!-- annotations that open kotlin files. don't hurt even if unused in kotlin project -->
            <!--              <option>all-open:annotation=javax.persistence.Entity</option>-->
            <!--              <option>all-open:annotation=javax.persistence.MappedSuperclass</option>-->
            <!--              <option>all-open:annotation=javax.persistence.Embeddable</option>-->
            <option>all-open:annotation=io.toolisticon.testing.jgiven.JGivenKotlinStage</option>
          </pluginOptions>
        </configuration>

        <executions>
          <!-- KOTLIN COMPILE -->
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>

          <!-- KOTLIN TEST -->
          <execution>
            <id>test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>test-compile</goal>
            </goals>
          </execution>

          <!-- KOTLIN ITEST -->
          <execution>
            <id>integration-test-compile</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>

        <dependencies>
          <!-- KOTLIN ALL-OPEN -->
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-allopen</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
          <!-- KOTLIN NO-ARG -->
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-noarg</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- JAVA (from kotlin maven doc) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.14.1</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <parameters>true</parameters>
        </configuration>
        <executions>
          <!-- Replacing default-compile as it is treated specially by maven -->
          <execution>
            <id>default-compile</id>
            <phase>none</phase>
          </execution>
          <!-- Replacing default-testCompile as it is treated specially by maven -->
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>java-compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>java-test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <argLine>-Daxon.axonserver.suppressDownloadMessage=true</argLine>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
